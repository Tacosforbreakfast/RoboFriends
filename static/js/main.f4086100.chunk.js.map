{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hassError","error","info","this","setState","hasError","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACA,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCcQK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEDR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCGGC,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,uBACZC,SAAUH,OCCAI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAArE,SACCJ,EAAMK,YCgBMC,E,kDAlBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,WAAW,GAHK,E,8DAOAC,EAAOC,GACxBC,KAAKC,SAAS,CAAEC,UAAU,M,+BAG1B,OAAIF,KAAKJ,MAAMM,SACN,wDAEAF,KAAKX,MAAMK,a,GAfKS,aCkDZC,G,wDA1Cd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKL,SAAS,CAAClB,YAAauB,EAAMC,OAAOC,SAbzC,EAAKZ,MAAM,CACVlB,OAAQ,GACRK,YAAa,IAJF,E,gEAQO,IAAD,OAClB0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEvB,OAAQmC,S,+BAQ/B,IAAD,EACwBb,KAAKJ,MAA7BlB,EADA,EACAA,OAAQK,EADR,EACQA,YACT+B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACpC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASnC,EAAYkC,kBAGtD,OAAKvC,EAAOyC,OAIV,sBAAK7C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKK,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU3B,OAAQoC,WARjB,6C,GA3BQX,cCGHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAEP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IADF,OAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f4086100.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\treturn(\n\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\t\t\n\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n\t\t<div>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t</div>\n\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\n\nconst CardList = ({ robots }) => {\n\treturn(\n\t  <div>\n      { \n\t\t\t  robots.map((user, i) => {\n\t\t\t\t\t return (\n\t\t\t\t\t\t  <Card \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\temail={robots[i].email}/>\n\t\t\t\t\t  );\n\t\t\t  })\n\t\t\t}    \n\t  </div> \n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t  className='pa3 ba b--green bg-lightest-blue'\n\t\t\t  type='search' \n\t\t\t  placeholder='search robot friends' \n\t\t\t  onChange={searchChange}\n\t\t  />\n\t\t</div>\n\t);\n}\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height:'500px'}}>\n\t\t{props.children} \n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thassError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\n\t\tthis.setState({ hasError: true })\n\t}\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t  return <h1>Ooops That is not good</h1>\n\t\t}\n\t\t  return this.props.children\n        \n\t}\n}\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport './App.css';\n\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=> response.json())\n\t\t.then(users => this.setState({ robots: users }));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value })\n\t\n\t\n\t}\n\trender(){\n\t\tconst {robots, searchfield } = this.state;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\n\t\tif (!robots.length) {\n\t\t\treturn <h1>Loading</h1>\n\t\t} else {\n\t\t\treturn(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t  <ErrorBoundry>\n\t\t\t\t\t    <CardList robots={filteredRobots} />\n\t\t\t\t\t  </ErrorBoundry> \n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t    );\n\t  }\t\t\n\t}\t\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n \n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}